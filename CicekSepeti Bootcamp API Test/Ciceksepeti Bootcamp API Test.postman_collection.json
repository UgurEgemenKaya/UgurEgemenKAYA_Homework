{
	"info": {
		"_postman_id": "bc5ba708-16af-42e8-90d5-935d0e50a97c",
		"name": "Ciceksepeti Bootcamp API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "cityName_ankara",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status code'larin 200/400/404 olmasini bekler\r",
							"pm.test(\"Status code is 200/400/404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,400,404]);\r",
							"});\r",
							"\r",
							"// Response time check\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900); \r",
							"});\r",
							"\r",
							"// URL'de sehir ismi var mi diye check eder\r",
							"pm.test(\"Url validation\", function() {\r",
							"    pm.expect(pm.variables.replaceIn(pm.request.url.toString())).to.include('=');\r",
							"});\r",
							"\r",
							"//Response Json uzunlugunu check eder, farkli veri gelirse fail olur\r",
							"pm.test(\"Response body length check\", function () {\r",
							"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
							"});\r",
							"// Response data tipini check eder\r",
							"let jsonData = pm.response.json()\r",
							"pm.test(\"Response body data type check\", () => {\r",
							"for (var i = 0; i < jsonData.reviewDtos.length; i++) {\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].name) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].regionName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].comment) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].cityName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].rating) == \"number\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].createOn) == \"string\").to.be.true;\r",
							"    }\r",
							"});\r",
							"\r",
							"// Toplam review sayisi ile 1-2-3-4-5 yildiz verilmis reviewlerin sayisini check eder\r",
							"\r",
							"pm.test(\"Is totalItemsCount equal to starDtos.count\", function () {\r",
							"    let totalsum = jsonData.totalCount\r",
							"    let calCount = parseInt(jsonData.starDtos[0].count) + parseInt(jsonData.starDtos[1].count)+ parseInt(jsonData.starDtos[2].count)+ parseInt(jsonData.starDtos[3].count)+ parseInt(jsonData.starDtos[4].count)\r",
							"    pm.expect(totalsum).to.eql(calCount);\r",
							"});\r",
							"\r",
							"// Eger JSON uzunlugu 6 dan kucukse test yapmaz\r",
							"let len = Object.keys(pm.response.json()).length == 1 ;\r",
							"\r",
							"(len ? pm.test.skip : pm.test)('The `cityName` contains ANKARA', () => {\r",
							"    _.each(jsonData.reviewDtos, (item) => {\r",
							"        pm.expect(item.cityName).to.include('ANKARA')\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName=ankara",
					"protocol": "https",
					"host": [
						"9413829b-f6a5-4e79-a341-048ab84ae0cd",
						"mock",
						"pstmn",
						"io"
					],
					"query": [
						{
							"key": "cityName",
							"value": "ankara"
						}
					]
				}
			},
			"response": [
				{
					"name": "cityName_ankara",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName=ankara",
							"protocol": "https",
							"host": [
								"9413829b-f6a5-4e79-a341-048ab84ae0cd",
								"mock",
								"pstmn",
								"io"
							],
							"query": [
								{
									"key": "cityName",
									"value": "ankara"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n  \"paginationResponse\": {\n    \"pageItemsCount\": 20,\n    \"totalItemsCount\": 25005,\n    \"totalPageCount\": 1251\n  },\n  \"totalCount\": 25005,\n  \"starDtos\": [\n    {\n      \"point\": 1,\n      \"percent\": 5,\n      \"count\": 1228\n    },\n    {\n      \"point\": 2,\n      \"percent\": 1,\n      \"count\": 362\n    },\n    {\n      \"point\": 3,\n      \"percent\": 2,\n      \"count\": 606\n    },\n    {\n      \"point\": 4,\n      \"percent\": 9,\n      \"count\": 2247\n    },\n    {\n      \"point\": 5,\n      \"percent\": 82,\n      \"count\": 20562\n    }\n  ],\n  \"averageRate\": 4.5,\n  \"averageAllReviewsRate\": 4.5,\n  \"reviewDtos\": [\n    {\n      \"name\": \"Name Surname\",\n      \"comment\": \"10 luk hizmet \",\n      \"rating\": 10,\n      \"createOn\": \"2021-12-16T08:36:02.101Z\",\n      \"regionName\": \"\",\n      \"cityName\": \"ANKARA\"\n    },\n    {\n      \"name\": \"Name Surname 2\",\n      \"comment\": \"Kaliteli Kargo\",\n      \"rating\": 10,\n      \"createOn\": \"2021-12-16T08:31:53.078Z\",\n      \"regionName\": \"\",\n      \"cityName\": \"ANKARA\"\n    },\n    {\n      \"name\": \"Name Surname 3\",\n      \"comment\": \"Hızlı kargo ve sürpriz için teşekkürler\",\n      \"rating\": 10,\n      \"createOn\": \"2021-12-16T07:49:34.927Z\",\n      \"regionName\": \"\",\n      \"cityName\": \"ANKARA\"\n    },\n    {\n      \"name\": \"Name Surname 4\",\n      \"comment\": \"Eşime aldım, gönderilmedi\",\n      \"rating\": 0,\n      \"createOn\": \"2021-12-16T07:08:19.8Z\",\n      \"regionName\": \"\",\n      \"cityName\": \"HATAY\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "cityName_istanbul",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status code'larin 200/400/404 olmasini bekler\r",
							"pm.test(\"Status code is 200/400/404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,400,404]);\r",
							"});\r",
							"\r",
							"// Response time check\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);   \r",
							"});\r",
							"\r",
							"// URL'de sehir ismi var mi diye check eder\r",
							"pm.test(\"Url validation\", function() {\r",
							"    pm.expect(pm.variables.replaceIn(pm.request.url.toString())).to.include('=');\r",
							"});\r",
							"\r",
							"//Response Json uzunlugunu check eder, farkli veri gelirse fail olur\r",
							"pm.test(\"Response body length check\", function () {\r",
							"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
							"});\r",
							"// Response data tipini check eder\r",
							"let jsonData = pm.response.json()\r",
							"pm.test(\"Response body data type check\", () => {\r",
							"for (var i = 0; i < jsonData.reviewDtos.length; i++) {\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].name) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].regionName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].comment) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].cityName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].rating) == \"number\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].createOn) == \"string\").to.be.true;\r",
							"    }\r",
							"});\r",
							"// Toplam review sayisi ile 1-2-3-4-5 yildiz verilmis reviewlerin sayisini check eder\r",
							"\r",
							"pm.test(\"Is totalItemsCount equal to starDtos.count\", function () {\r",
							"    let totalsum = jsonData.totalCount\r",
							"    let calCount = parseInt(jsonData.starDtos[0].count) + parseInt(jsonData.starDtos[1].count)+ parseInt(jsonData.starDtos[2].count)+ parseInt(jsonData.starDtos[3].count)+ parseInt(jsonData.starDtos[4].count)\r",
							"    pm.expect(totalsum).to.eql(calCount);\r",
							"});\r",
							"\r",
							"// Eger JSON uzunlugu 6 dan kucukse test yapmaz\r",
							"let len = Object.keys(pm.response.json()).length == 1 ;\r",
							"\r",
							"(len ? pm.test.skip : pm.test)('The `cityName` contains ISTANBUL', () => {\r",
							"    _.each(jsonData.reviewDtos, (item) => {\r",
							"        pm.expect(item.cityName).to.include('ISTANBUL')\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName=istanbul",
					"protocol": "https",
					"host": [
						"9413829b-f6a5-4e79-a341-048ab84ae0cd",
						"mock",
						"pstmn",
						"io"
					],
					"query": [
						{
							"key": "cityName",
							"value": "istanbul"
						}
					]
				}
			},
			"response": [
				{
					"name": "cityName_istanbul",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName=istanbul",
							"protocol": "https",
							"host": [
								"9413829b-f6a5-4e79-a341-048ab84ae0cd",
								"mock",
								"pstmn",
								"io"
							],
							"query": [
								{
									"key": "cityName",
									"value": "istanbul"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"paginationResponse\": {\n        \"pageItemsCount\": 20,\n        \"totalItemsCount\": 25005,\n        \"totalPageCount\": 1251\n    },\n    \"totalCount\": 25005,\n    \"starDtos\": [\n        {\n            \"point\": 1,\n            \"percent\": 5,\n            \"count\": 1228\n        },\n        {\n            \"point\": 2,\n            \"percent\": 1,\n            \"count\": 362\n        },\n        {\n            \"point\": 3,\n            \"percent\": 2,\n            \"count\": 606\n        },\n        {\n            \"point\": 4,\n            \"percent\": 9,\n            \"count\": 2247\n        },\n        {\n            \"point\": 5,\n            \"percent\": 82,\n            \"count\": 20562\n        }\n    ],\n    \"averageRate\": 4.5,\n    \"averageAllReviewsRate\": 4.5,\n    \"reviewDtos\": [\n        {\n            \"name\": \"Name Surname\",\n            \"comment\": \"10 luk hizmet \",\n            \"rating\": 10,\n            \"createOn\": \"2021-12-16T08:36:02.101Z\",\n            \"regionName\": \"\",\n            \"cityName\": \"ISTANBUL\"\n        },\n        {\n            \"name\": \"Name Surname 2\",\n            \"comment\": \"Kaliteli Kargo\",\n            \"rating\": 10,\n            \"createOn\": \"2021-12-16T08:31:53.078Z\",\n            \"regionName\": \"\",\n            \"cityName\": \"ISTANBUL\"\n        },\n        {\n            \"name\": \"Name Surname 3\",\n            \"comment\": \"Hızlı kargo ve sürpriz için teşekkürler\",\n            \"rating\": 10,\n            \"createOn\": \"2021-12-16T07:49:34.927Z\",\n            \"regionName\": \"\",\n            \"cityName\": \"ISTANBUL\"\n        },\n        {\n            \"name\": \"Name Surname 4\",\n            \"comment\": \"Eşime aldım, gönderilmedi\",\n            \"rating\": 0,\n            \"createOn\": \"2021-12-16T07:08:19.8Z\",\n            \"regionName\": \"\",\n            \"cityName\": \"ISTANBUL\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "cityName_van",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status code'larin 200/400/404 olmasini bekler\r",
							"pm.test(\"Status code is 200/400/404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,400,404]);\r",
							"});\r",
							"\r",
							"// Response time check\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);   \r",
							"});\r",
							"\r",
							"// URL'de sehir ismi var mi diye check eder\r",
							"pm.test(\"Url validation\", function() {\r",
							"    pm.expect(pm.variables.replaceIn(pm.request.url.toString())).to.include('=');\r",
							"});\r",
							"\r",
							"//Response Json uzunlugunu check eder, farkli veri gelirse fail olur\r",
							"pm.test(\"Response body length check\", function () {\r",
							"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
							"});\r",
							"// Response data tipini check eder\r",
							"let jsonData = pm.response.json()\r",
							"pm.test(\"Response body data type check\", () => {\r",
							"for (var i = 0; i < jsonData.reviewDtos.length; i++) {\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].name) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].regionName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].comment) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].cityName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].rating) == \"number\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].createOn) == \"string\").to.be.true;\r",
							"    }\r",
							"});\r",
							"// Toplam review sayisi ile 1-2-3-4-5 yildiz verilmis reviewlerin sayisini check eder\r",
							"\r",
							"pm.test(\"Is totalItemsCount equal to starDtos.count\", function () {\r",
							"    let totalsum = jsonData.totalCount\r",
							"    let calCount = parseInt(jsonData.starDtos[0].count) + parseInt(jsonData.starDtos[1].count)+ parseInt(jsonData.starDtos[2].count)+ parseInt(jsonData.starDtos[3].count)+ parseInt(jsonData.starDtos[4].count)\r",
							"    pm.expect(totalsum).to.eql(calCount);\r",
							"});\r",
							"\r",
							"// Eger JSON uzunlugu 6 dan kucukse test yapmaz\r",
							"let len = Object.keys(pm.response.json()).length == 1 ;\r",
							"\r",
							"(len ? pm.test.skip : pm.test)('The `cityName` contains VAN', () => {\r",
							"    _.each(jsonData.reviewDtos, (item) => {\r",
							"        pm.expect(item.cityName).to.include('VAN')\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName=van",
					"protocol": "https",
					"host": [
						"9413829b-f6a5-4e79-a341-048ab84ae0cd",
						"mock",
						"pstmn",
						"io"
					],
					"query": [
						{
							"key": "cityName",
							"value": "van"
						}
					]
				}
			},
			"response": [
				{
					"name": "cityName_van",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName=van",
							"protocol": "https",
							"host": [
								"9413829b-f6a5-4e79-a341-048ab84ae0cd",
								"mock",
								"pstmn",
								"io"
							],
							"query": [
								{
									"key": "cityName",
									"value": "van"
								}
							]
						}
					},
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"message\": \"Not Found\"\n}"
				}
			]
		},
		{
			"name": "cityName is null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status code'larin 200/400/404 olmasini bekler\r",
							"pm.test(\"Status code is 200/400/404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,400,404]);\r",
							"});\r",
							"\r",
							"// Response time check\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);   \r",
							"});\r",
							"\r",
							"// URL'de sehir ismi var mi diye check eder\r",
							"pm.test(\"Url validation\", function() {\r",
							"    pm.expect(pm.variables.replaceIn(pm.request.url.toString())).to.include('=');\r",
							"});\r",
							"\r",
							"//Response Json uzunlugunu check eder, farkli veri gelirse fail olur\r",
							"pm.test(\"Response body length check\", function () {\r",
							"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
							"});\r",
							"// Response data tipini check eder\r",
							"let jsonData = pm.response.json()\r",
							"pm.test(\"Response body data type check\", () => {\r",
							"for (var i = 0; i < jsonData.reviewDtos.length; i++) {\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].name) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].regionName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].comment) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].cityName) == \"string\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].rating) == \"number\").to.be.true;\r",
							"    pm.expect(typeof(jsonData.reviewDtos[i].createOn) == \"string\").to.be.true;\r",
							"    }\r",
							"});\r",
							"// Toplam review sayisi ile 1-2-3-4-5 yildiz verilmis reviewlerin sayisini check eder\r",
							"\r",
							"pm.test(\"Is totalItemsCount equal to starDtos.count\", function () {\r",
							"    let totalsum = jsonData.totalCount\r",
							"    let calCount = parseInt(jsonData.starDtos[0].count) + parseInt(jsonData.starDtos[1].count)+ parseInt(jsonData.starDtos[2].count)+ parseInt(jsonData.starDtos[3].count)+ parseInt(jsonData.starDtos[4].count)\r",
							"    pm.expect(totalsum).to.eql(calCount);\r",
							"});\r",
							"\r",
							"// Eger JSON uzunlugu 6 dan kucukse test yapmaz\r",
							"let len = Object.keys(pm.response.json()).length == 1 ;\r",
							"\r",
							"(len ? pm.test.skip : pm.test)('The `cityName` contains NaN', () => {\r",
							"    _.each(jsonData.reviewDtos, (item) => {\r",
							"        pm.expect(item.cityName).to.include('NaN')\r",
							"    })\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName",
					"protocol": "https",
					"host": [
						"9413829b-f6a5-4e79-a341-048ab84ae0cd",
						"mock",
						"pstmn",
						"io"
					],
					"query": [
						{
							"key": "cityName",
							"value": null
						}
					]
				}
			},
			"response": [
				{
					"name": "cityName is null",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://9413829b-f6a5-4e79-a341-048ab84ae0cd.mock.pstmn.io?cityName",
							"protocol": "https",
							"host": [
								"9413829b-f6a5-4e79-a341-048ab84ae0cd",
								"mock",
								"pstmn",
								"io"
							],
							"query": [
								{
									"key": "cityName",
									"value": null
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n  \"cityName\": [\n    \"'cityName' can not be null.\"\n  ]\n}"
				}
			]
		}
	]
}